name: Generate and Upload SBOM via cdxgen
# This workflow generates a Software Bill of Materials (SBOM) using the CycloneDX generator and uploads it to Dependency-Track. 
# See here for more information: https://superluminar.io/2025/06/10/generating-sboms-using-github-actions-and-cdxgen/

on:
  workflow_call:
    inputs:
      cdx_version:
        required: false
        type: string
        default: v11.5.0
        description: >
          Version tag of the CycloneDX generator to use. 
          Find a listing of available versions at: 
          https://github.com/CycloneDX/cdxgen/pkgs/container/cdxgen/versions?filters%5Bversion_type%5D=tagged
      cdx_image:
        required: false
        type: string
        default: cdxgen
        description: >
          Image name of the CycloneDX generator to use.
          Helpful for choosing a specific language version (e.g. cdxgen-java17).
          Find a listing of available images at: https://github.com/orgs/CycloneDX/packages?repo_name=cdxgen
      use_cdxgen_debug_mode:
        required: false
        type: boolean
        default: false
        description: >
          Enable debug mode for CycloneDX generator
    # secrets:
      # setting some secrets to be used in the workflow

permissions:
  contents: read
  security-events: write


jobs:
  generate-sbom-and-upload-to-dependency-track:
    runs-on: ubuntu-latest
    steps:
      # First, we need to set up the environment and install necessary tools like
      # checkout the code, set credentials for private registries or hosting providers 
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Generate SBOM
        run: |
          docker run --rm \
          ${{ inputs.use_cdxgen_debug_mode && '-e CDXGEN_DEBUG_MODE=debug' || '' }} \
          -e FETCH_LICENSE=true \
          -v /tmp:/tmp -v $(pwd):/app:rw \
          ghcr.io/cyclonedx/${{ inputs.cdx_image }}:${{ inputs.cdx_version }} \
          -r /app --type swift ./MASTestApp.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved -o /app/sbom.json

      - name: list SBOM file
        run: |
           echo "Listing SBOM file:"
           ls -l sbom.json
           ls -l app/sbom.json 

      # After generating the SBOM, it is uploaded it to Dependency-Track
    #   - name: Upload SBOM to Dependency-Track
        # run: |
        #   echo "{\"project\": \"UNIQUE-PROJECT-UUID\",\"bom\": \"$(cat sbom.json | base64 --wrap=0)\"}" > sbom_64.json
        #   curl -X PUT -H "Content-Type: application/json" -H "X-Api-Key: DEPENDENCY-API-KEY" \
        #   -d @sbom_64.json DEPENDENCY-API-URL/api/v1/bom/